@using Communication.Extensions;
@using Shared.DTO;
@using Shared.Extensions;
@using Newtonsoft.Json;

@{
    var notificationsTempData = TempData["Notifications"];
    List<ResultResponse> notifications = notificationsTempData is not null ? JsonConvert.DeserializeObject<List<ResultResponse>>(notificationsTempData.ToString()) : null;
}


@if (notifications != null)
{
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            var notifications = @Html.Raw(JsonConvert.SerializeObject(notifications));
            notifications.forEach(function (notification) {
                Swal.fire({
                    icon: notification.Level === "Error" ? "error" : "success",
                    title: notification.Level === "Error" ? "Erro!" : "Sucesso!",
                    text: notification.Message,
                    showConfirmButton: true
                });
            });
        });

    </script>
}